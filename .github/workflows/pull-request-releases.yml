
---
name: "Pre-release validation"
on:
  pull_request:
    branches:
      - releases/**

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  ansible_test:
    name: Run ansible-test validation
    runs-on: ubuntu-20.04]
    if: needs.cloudvision.status != 'failed' && needs.molecule_eos_designs.status != 'failed' && needs.file-changes.outputs.plugins == 'true'
    strategy:
      fail-fast: true
      matrix:
        python_version: [ 3.8 ]
    steps:
      - name: 'set environment variables'
        run: |
          echo "PY_COLORS=1" >> $GITHUB_ENV
          echo "ANSIBLE_FORCE_COLOR=1" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: 'Install Python requirements'
        run: make install-requirements
      - name: 'ansible-test linting'
        run: |
          cd ansible_collections/arista/avd/
          ansible-test sanity  -v --requirements --docker --skip-test yamllint --exclude docs/

  galaxy_importer:
    name: Test galaxy-importer
    runs-on: ubuntu-latest
    container: avdteam/base:3.8-v2.0
    needs: [ molecule_eos_designs ]
    if: needs.cloudvision.status != 'failed' && needs.molecule_eos_designs.status != 'failed' && needs.file-changes.outputs.plugins == 'true'
    env:
      PY_COLORS: 1 # allows molecule colors to be passed to GitHub Actions
      ANSIBLE_FORCE_COLOR: 1 # allows ansible colors to be passed to GitHub Actions
    steps:
      - name: 'set environment variables'
        run: |
          echo "PY_COLORS=1" >> $GITHUB_ENV
          echo "ANSIBLE_FORCE_COLOR=1" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: install requirements
        run: make install-requirements
      - name: 'build ansible package'
        run: make collection-build
      - name: 'run ansible-importer checks'
        run: python -m galaxy_importer.main *.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: importer-logs
          path: ./importer_result.json
